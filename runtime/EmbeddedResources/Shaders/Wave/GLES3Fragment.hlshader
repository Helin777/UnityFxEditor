#version 300 es

precision highp float;
precision highp int;

uniform 	float _Zoom;
uniform 	float _Power;
uniform 	float _Offset;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
 out highp vec4 SV_Target0;
bool u_xlatb0;
vec4 u_xlat1;
float u_xlat2;
bool u_xlatb2;
void main()
{
#ifdef UNITY_ADRENO_ES3
    u_xlatb0 = !!(vs_TEXCOORD0.x<0.0);
#else
    u_xlatb0 = vs_TEXCOORD0.x<0.0;
#endif
    u_xlat2 = vs_TEXCOORD0.x * _Zoom + _Offset;
    u_xlat2 = sin(u_xlat2);
    u_xlat1.y = u_xlat2 * _Power + vs_TEXCOORD0.y;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(u_xlat1.y<0.0);
#else
    u_xlatb2 = u_xlat1.y<0.0;
#endif
    u_xlatb0 = u_xlatb2 || u_xlatb0;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(1.0<vs_TEXCOORD0.x);
#else
    u_xlatb2 = 1.0<vs_TEXCOORD0.x;
#endif
    u_xlatb0 = u_xlatb2 || u_xlatb0;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(1.0<u_xlat1.y);
#else
    u_xlatb2 = 1.0<u_xlat1.y;
#endif
    u_xlatb0 = u_xlatb2 || u_xlatb0;
    u_xlat1.x = vs_TEXCOORD0.x;
    u_xlat1 = texture(_MainTex, u_xlat1.xy);
    SV_Target0 = (bool(u_xlatb0)) ? vec4(0.0, 0.0, 0.0, 1.0) : u_xlat1;
    return;
}